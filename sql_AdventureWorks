# Easy question
1)

select FirstName, EmailAddress
from Customer
where CompanyName = 'Bike World';

result:
FirstName	EmailAddress
Kerim	kerim0@adventure-works.com

2)
select CompanyName
from Customer
join CustomerAddress on Customer.CustomerID = CustomerAddress.CustomerID
join Address on CustomerAddress.AddressID= Address.AddressID
where city = 'Dallas';

result:
CompanyName
Town Industries
Elite Bikes
Elite Bikes
Third Bike Store
Unsurpassed Bikes
Rental Bikes

3)
method 1:
select distinct count(SalesOrderDetail.ProductID) as numItem
from SalesOrderDetail
 join Product on SalesOrderDetail.ProductID = Product.ProductID 
where ListPrice > 1000;

method 2:
SELECT COUNT(1) as 'numItem'
FROM (SELECT COUNT(DISTINCT sod.productID) as num
	       FROM SalesOrderDetail sod
      	       	JOIN (Select Product.ProductID 
                               From Product 
            	           Where Product.ListPrice > 1000) p
                     ON sod.ProductID = p.ProductID
               GROUP BY p.productID) a

result:
numItem
41

4)
method 1:
select CompanyName
from Customer
 join SalesOrderHeader on Customer.CustomerID = SalesOrderHeader.CustomerID
 where (SalesOrderHeader.subtotal + TaxAmt + Freight) > 100000;
 
 method 2:
 SELECT SalesOrderID,
              CONCAT(c.FirstName, ' ', c.LastName) AS CustName,
              c.CompanyName, soh.SubTotal, soh.TaxAmt, soh.Freight,
              soh.SubTotal+soh.TaxAmt+soh.Freight AS 'Sale Amount' 
FROM SalesOrderHeader AS soh
	LEFT JOIN Customer AS c
	ON soh.CustomerID = c.CustomerID
WHERE soh.SubTotal+soh.TaxAmt+soh.Freight > 100000
 
 result:
CompanyName
Action Bicycle Specialists
Metropolitan Bicycle Supply

5)
method 1:
select sum(SalesOrderDetail.OrderQty) as numRacingSockL
from SalesOrderDetail
 join Product on SalesOrderDetail.ProductID = Product.ProductID
 join SalesOrderHeader on SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
 join Customer on SalesOrderHeader.CustomerID = Customer.CustomerID
where Product.Name = 'Racing Socks, L' and CompanyName = 'Riding Cycles';

method 2:

Select CN.CompanyName, PN.OrderQty
From
(Select SalesOrderID, OrderQty
From SalesOrderDetail As SOD
Join Product
On SOD.ProductID = Product.ProductID
Where Product.Name = 'Racing Socks, L') As PN
Join
(Select SalesOrderID, SOH.CustomerID, CompanyName
From SalesOrderHeader SOH
Join Customer 
On SOH.CustomerID = Customer.CustomerID
Where CompanyName = 'Riding Cycles') As CN
On PN.SalesOrderID = CN.SalesOrderID

 result:
 numRacingSockL
 3

# medium questions
6)

SELECT sod.SalesOrderID, ProductID, UnitPrice
FROM SalesOrderDetail sod
	JOIN (SELECT SalesOrderID
	           FROM SalesOrderDEtail
      	           GROUP BY SalesOrderID
                  HAVING COUNT(ProductID)=1) oo
       ON sod.SalesOrderID=oo.SalesOrderID

result:
SalesOrderID	ProductID	UnitPrice
71776	907	63.9
71867	717	858.9
71917	875	5.39
71938	973	1020.59

7)
method 1:
select Product.Name, Customer.CompanyName
from ProductModel
  join Product on ProductModel.ProductModelID = Product.ProductModelID
  join SalesOrderDetail on Product.ProductID = SalesOrderDetail.ProductID
  join SalesOrderHeader on SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
  join Customer on SalesOrderHeader.CustomerID = Customer.CustomerID

where ProductModel.Name = 'Racing Socks';

method 2:
Select Name,CompanyName
From (Select SalesOrderID, RS.Name
           From SalesOrderDetail As SOD
           Join (Select PD.Name, PD.ProductID 
                    From Product As PD
                    Join ProductModel As PM
                   On PD.ProductModelID = PM.ProductModelID
                   Where PM.Name = 'Racing Socks') As RS
            On SOD.ProductID = RS.ProductID) As PN
Join 
(Select SOH.SalesOrderID, CT.CompanyName
From SalesOrderHeader As SOH
Join Customer As CT
On SOH.CustomerID = CT.CustomerID) As CN
On PN.SalesOrderID = CN.SalesOrderID

result:
Name	CompanyName
Racing Socks, M	Thrifty Parts and Sales
Racing Socks, M	Sports Products Store
Racing Socks, M	The Bicycle Accessories Company
Racing Socks, M	Remarkable Bike Store
Racing Socks, L	Eastside Department Store
Racing Socks, L	Riding Cycles
Racing Socks, L	Sports Products Store
Racing Socks, L	Essential Bike Works
Racing Socks, L	The Bicycle Accessories Company
Racing Socks, L	Remarkable Bike Store

8)
method 1:
select ProductDescription.Description
from ProductDescription

 join ProductModelProductDescription on ProductDescription.ProductDescriptionID = ProductModelProductDescription.ProductDescriptionID
 join ProductModel on ProductModelProductDescription.ProductModelID = ProductModel.ProductModelID
 join Product on ProductModel.ProductModelID = Product.ProductModelID

 where ProductModelProductDescription.culture = 'fr'
  and Product.ProductID = '736';
  
method 2:
SELECT pd.Description
FROM ProductDescription AS pd
  JOIN ProductModelProductDescription AS pmpd ON pmpd.ProductDescriptionID = pd.ProductDescriptionID 
  JOIN ProductModel AS pm ON pm.ProductModelID = pmpd.ProductModelID
  JOIN Product AS p ON p.ProductModelID = pm.ProductModelID
WHERE pmpd.Culture = 'fr' AND p.ProductID = 736

result:
Description
Le cadre LL en aluminium offre une conduite confortable, une excellente absorption des bosses pour un très bon rapport qualité-prix

9)
method 1:
select Customer.CompanyName, SalesOrderHeader.SubTotal,SUM(SalesOrderDetail.OrderQty * Product.weight) as sumWeight
from Product
  join SalesOrderDetail on Product.ProductID = SalesOrderDetail.ProductID
  join SalesOrderHeader on SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
  join Customer on SalesOrderHeader.CustomerID = Customer.CustomerID
  group by SalesOrderHeader.SalesOrderID, SalesOrderHeader.SubTotal, Customer.CompanyName
  order by SalesOrderHeader.SubTotal DESC;
  
 method 2:
 SELECT soh.SalesOrderID, c.CompanyName, soh.SubTotal, sdp.TotalWeight 
FROM SalesOrderHeader soh
	JOIN
	(SELECT SalesOrderID, SUM(sod.OrderQty*p.Weight) as TotalWeight
    	 FROM SalesOrderDetail sod
               JOIN Product p
               ON sod.ProductID = p.ProductID
    	 GROUP BY SalesOrderID) sdp
	ON soh.SalesOrderID = sdp.SalesOrderID
	JOIN Customer c
	ON soh.CustomerID = c.CustomerID
ORDER BY SubTotal DESC
  
  result:
CompanyName	SubTotal	sumWeight
Action Bicycle Specialists	108561.83	1133911.56
Metropolitan Bicycle Supply	98278.69	679588.02
Bulk Discount Store	88812.86	34813.05
Eastside Department Store	83858.43	565638.72
Riding Cycles	78029.69	504095.33
Many Bikes Store	74058.81	744328.6
Instruments and Parts Company	63980.99	731576.77
...

10)
method 1:
select sum(SalesOrderDetail.OrderQty) as numProducts
from SalesOrderDetail
 join product on SalesOrderDetail.ProductID = product.ProductID
 join SalesOrderHeader on SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
 join Customer on SalesOrderHeader.CustomerID = Customer.CustomerID
 join CustomerAddress on Customer.CustomerID = CustomerAddress.CustomerID
 join Address on CustomerAddress.AddressID = Address.AddressID
 join ProductCategory on Product.ProductCategoryID = ProductCategory.ProductCategoryID

where ProductCategory.Name = 'Cranksets'
      and Address.City = 'London';
      
 method 2:
 SELECT SUM(DP.salesQTY) totalProducts
FROM
(SELECT SalesOrderID, SUM(OrderQty) salesQTY
 FROM SalesOrderDetail sod
     JOIN Product p
     ON sod.ProductID = p.ProductID
     JOIN ProductCategory pc
     ON p.ProductCategoryID = pc.ProductCategoryID
 WHERE pc.Name = 'Cranksets'
 GROUP BY SalesOrderID) DP
JOIN
(SELECT SalesOrderID
 FROM SalesOrderHeader soh
 JOIN Address a
 ON soh.ShipToAddressID = a.AddressID
 WHERE a.City = 'London') HA
ON DP.SalesOrderID = HA.SalesOrderID
GROUP BY DP.SalesOrderID
      
result:
numProducts
9

# Hard questions

11)
method 1:
select CompanyName,
  max(case when AddressType = 'Main Office' then AddressLine1 else '' end) as mainOfficeAddress,
  max(case when AddressType = 'Shipping' then AddressLine1 else '' end) as shippingAddress
from Address
 join CustomerAddress on Address.AddressID = CustomerAddress.AddressID
 join Customer on CustomerAddress.CustomerID = Customer.CustomerID
where Address.city = 'Dallas'
group by Customer.CompanyName

method 2:
Select Mo.CompanyName, Mo.AddressLine1 M_Ad, Sh.AddressLine1 S_Ad 
From (Select CompanyName, AddressLine1
            From CustomerAddress As CA
            Join Address As AD On CA.AddressID = AD.AddressID
            Join Customer As CT On CA.CustomerID = CT.CustomerID
            Where City = 'Dallas' And AddressType = 'Main Office') Mo
Left Outer Join
            (Select CompanyName, AddressLine1
             From CustomerAddress As CA
             Join Address As AD On CA.AddressID = Ad.AddressID
             Join Customer As CT On CA.CustomerID = CT.CustomerID
             Where AddressType ='Shipping') Sh
On Mo.CompanyName = Sh.CompanyName

Result:
CompanyName	mainOfficeAdd..	shippingAddre..
Elite Bikes	Po Box 8259024	9178 Jumping St.
Rental Bikes	99828 Routh Street, Suite 825	
Third Bike Store	2500 North Stemmons Freeway	
Town Industries	P.O. Box 6256916	
Unsurpassed Bikes	Po Box 8035996	

12)
method 1:
select SalesOrderHeader.SalesOrderID, SalesOrderHeader.SubTotal as ST1,
  sum(SalesOrderDetail.OrderQty * SalesOrderDetail.UnitPrice) as ST2,
  sum(SalesOrderDetail.OrderQty * Product.ListPrice) as ST3
from SalesOrderHeader
  join SalesOrderDetail on SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID
  join Product on SalesOrderDetail.ProductID = Product.ProductID
group by SalesOrderHeader.SalesOrderID, SalesOrderHeader.SubTotal;

method 2:
Select SOH.SalesOrderID, 
           Max(SubTotal) As SubTotal, 
           Sum(OrderQty*UnitPrice) As 'Qty_UP', 
    Sum(OrderQty*ListPrice) As 'Qty_LP'
From SalesOrderDetail As SOD 
Join SalesOrderHeader As SOH On SOD.SalesOrderID = SOH.SalesOrderID
Left outer Join Product As PD On SOD.ProductID = PD.ProductID
Group By SOH.SalesOrderID

Result:
SalesOrderID	ST1	ST2	ST3
71774	880.35	713.8	1189.66
71776	78.81	63.9	106.5
71780	38418.69	30600.81	56651.56
71782	39785.33	33319.68	55533.31
71783	83858.43	68141.99	121625.43
71784	108561.83	90341.14	151932.58
...

13)
method 1:
select * from
(select Product.Name, sum(SalesOrderDetail.OrderQty * SalesOrderDetail.UnitPrice) as Value, RANK() OVER (PARTITION BY 1 order by sum(SalesOrderDetail.OrderQty * SalesOrderDetail.UnitPrice) desc) as rn
from Product
 join SalesOrderDetail on Product.ProductID = SalesOrderDetail.ProductID
group by Product.Name)a
where rn = 1;

method 2:
Select Top 1 Name, 
                      Sum(OrderQty) As 'Total Qty', 
                      Sum(UnitPrice) As 'Total Price', 
                      Sum(OrderQty*UnitPrice) As 'Value'
From SalesOrderDetail As SOD
Join Product AS PD On SOD.ProductID = PD.ProductID
Group By Name
Order By 'Value' Desc

result:
Name	Value	rn
Touring-1000 Blue, 60	37191.44	1

14)
select a.range as RANGE, count(a.Total) as 'Num orders', sum(a.Total) as 'Total Value'
from ( select
      case when SalesOrderDetail.UnitPrice * SalesOrderDetail.OrderQty between 0 and 99
      then '0 - 99'
      when SalesOrderDetail.UnitPrice * SalesOrderDetail.OrderQty between 100 and 999
      then '100-999'
      when SalesOrderDetail.UnitPrice * SalesOrderDetail.OrderQty between 1000 and 9999
      then '1000-9999'
      when SalesOrderDetail.UnitPrice * SalesOrderDetail.OrderQty > 10000
      then '10000-'
      else ''
      end as range,
      SalesOrderDetail.UnitPrice * SalesOrderDetail.OrderQty AS Total
      from SalesOrderDetail
      )a

group by a.range
order by a.range;

Result:
RANGE	Num orders	Total Value
0 - 99	129	6576.02
100-999	225	90859.33
1000-9999	138	433813.21
10000-	8	113661.13

15)
method: 
Select * 
From (Select ee.City, dd.ProductCateName, sum(Tot) As Total, 
                       rank() over (Partition by ee.city order by sum(tot) desc) as Ranknum
             From (Select SalesOrderId, 
			   cc.Name ProductCateName, 
                                    Sum(OrderQty*UnitPrice)  Tot
                         From SalesOrderDetail aa
                         Join Product bb 
                         On aa.ProductID=bb.ProductID
                         Join ProductCategory cc 
                         On bb.ProductCategoryID=cc.ProductCategoryID
                         Group by SalesOrderId, cc.Name ) dd
              Join
                     (Select bb.City, SalesOrderID, SubTotal
                      From SalesOrderHeader aa 
                      Join Address bb 
		  On aa.ShipToAddressID=bb.AddressID
                      Join 
                             (Select top 3 City
   From SalesOrderHeader aa 
   Join Address bb 
   On aa.ShipToAddressID=bb.AddressID
   Group by City  
   Order by sum(SubTotal) desc) CC
 On bb.City=CC.City) ee 
                On dd.SalesOrderID=ee.SalesOrderID
                Group by ee.City, dd.ProductCateName) ddd
Where Ranknum=1

step by step:
# select 3  city
select top 3 * from(
select Address.City, sum(SalesOrderDetail.OrderQty * SalesOrderDetail.UnitPrice) as TotalSales
from SalesOrderDetail
 join product on SalesOrderDetail.ProductID = product.ProductID
 join SalesOrderHeader on SalesOrderDetail.SalesOrderID = SalesOrderHeader.SalesOrderID
 join Customer on SalesOrderHeader.CustomerID = Customer.CustomerID
 join CustomerAddress on Customer.CustomerID = CustomerAddress.CustomerID
 join Address on CustomerAddress.AddressID = Address.AddressID
group by Address.City
order by TotalSales desc;
)a

Result:
City	TotalSales
Woolston	90341.14
London	85245.8
Union City	68141.99
Liverpool	65218.2
Fullerton	60526.52
Gloucestershire	53248.57

# select top level product category
select Address.City, ProductCategory.Name as product_Category_Name, max(sum(SalesOrderDetail.OrderQty * SalesOrderDetail.UnitPrice) as TotalSales)
from ()
  join SalesOrderHeader on Address.AddressID = SalesOrderHeader.ShipToAddressID
  join SalesOrderDetail on SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID
  join Product on SalesOrderDetail.ProductID = Product.ProductID
  join ProductCategory on Product.ProductCategoryID = ProductCategory.ProductCategoryID
where Address.City in ('Woolston', 'Woolston', 'London')
group by Address.City, ProductCategory.Name
order by TotalSales desc, ProductCategory.Name;

Result:
City	ProductCateName	Total	Ranknum
London	Mountain Bikes	50881.99	1
Union City	Road Bikes	53478.76	1
Woolston	Touring Bikes	77040.15	1


# Resit questions
1)
method 1:
select SalesOrderHeader.SalesOrderID, Customer.CompanyName
from Customer
left join SalesOrderHeader on Customer.CustomerID = SalesOrderHeader.CustomerID
where CompanyName like '%Good Toys%'
   or CompanyName like '%Bike World%'
   
method 2:  
SELECT COUNT(SalesOrderID) AS SalesOrderNumber
FROM SalesOrderHeader 
WHERE CustomerID IN (SELECT CustomerID FROM Customer
		        	          WHERE CompanyName IN ('Good Toys', 'Bike World'))

result:  
SalesOrderID	CompanyName
              Bike World
71774	        Good Toys

2)
method 1:
select Product.Name, SalesOrderDetail.OrderQty
from Customer
join SalesOrderHeader on Customer.CustomerID = SalesOrderHeader.CustomerID
join SalesOrderDetail on SalesOrderHeader.SalesOrderID = SalesOrderDetail.SalesOrderID
join Product on SalesOrderDetail.ProductID = Product.ProductID
where Customer.CompanyName = 'Futuristic Bikes';

method 2:
SELECT  Name ProductName,  SUM(OrderQty) AS OrderQty
FROM SalesOrderDetail sod
	JOIN Product p
	ON sod.ProductID = p.ProductID
WHERE SalesOrderID IN (SELECT SalesOrderID 
                                            FROM SalesOrderHeader AS Sh
                                            WHERE CustomerID IN (SELECT CustomerID
						FROM Customer
						WHERE CompanyName = 'Futuristic Bikes'))
GROUP BY Name

Result:
Name	OrderQty
ML Mountain Seat/Saddle	2
Long-Sleeve Logo Jersey, L	2
Classic Vest, S	3

3)
method 1:
select a.CompanyName, Address.AddressLine1, Address.AddressLine2, Address.City, Address.StateProvince, Address.CountyRegion, Address.PostalCode
from (
select distinct CustomerID, CompanyName, 1 AS 'Rank'
from Customer
where lower(CompanyName) LIKE '%bike%'
union select distinct CustomerID, CompanyName, 2 AS 'Rank'
from Customer
where LOWER(CompanyName) LIKE '%cycle%')a
join CustomerAddress on a.CustomerID = CustomerAddress.CustomerID
join Address on CustomerAddress.AddressID = Address.AddressID
order by a.Rank, a.CompanyName;

method 2:

SELECT DISTINCT CompanyName, AddressLine1, AddressLine2
FROM Customer AS c
  JOIN CustomerAddress AS ca ON ca.CustomerID = c.CustomerID
  JOIN Address AS a ON a.AddressID = ca.AddressID
WHERE lower(CompanyName) LIKE '%bike%'
UNION ALL
SELECT DISTINCT CompanyName, AddressLine1, AddressLine2
FROM Customer AS c
  JOIN CustomerAddress AS ca ON ca.CustomerID = c.CustomerID
  JOIN Address AS a ON a.AddressID = ca.AddressID
WHERE lower(CompanyName) LIKE '%cycle%'

result:
CompanyName	AddressLine1	AddressLine2	City	StateProvince	CountyRegion	PostalCode
A Bike Store	2251 Elliot Avenue	NULL	Seattle	Washington	United States	98104
A Typical Bike Shop	One Dancing, Rr No. 25	Box 8033	Round Rock	Texas	United States	78664
Advanced Bike Components	12345 Sterling Avenue	NULL	Irving	Texas	United States	75061
Area Bike Accessories	6900 Sisk Road	NULL	Modesto	California	United States	95354
Associated Bikes	5420 West 22500 South	NULL	Salt Lake City	Utah	United States	84101
Authorized Bike Sales and Rental	490 Ne 4th St	NULL	Renton	Washington	United States	98055
Basic Bike Company	15 East Main	NULL	Port Orchard	Washington	United States	98366
Best o' Bikes	250880 Baur Blvd	NULL	Saint Louis	Missouri	United States	63103
Big-Time Bike Store	9909 W. Ventura Boulevard	NULL	Camarillo	California	United States	93010
Bike Dealers Association	9952 E. Lohman Ave.	NULL	Las Cruces	New Mexico	United States	88001

4)
select Address.CountyRegion, SUM(SubTotal) as SumRegion
from SalesOrderHeader
join Address on SalesOrderHeader.ShipToAddressID = Address.AddressID
group by Address.CountyRegion
order by SumRegion desc;

Result:
CountyRegion	SumRegion
United Kingdom	518096.42
United States	347336.69

5)
select CountyRegion, CustomerID, reTotal
from(
select CountyRegion, CustomerAddress.CustomerID, sum(SubTotal)as reTotal,
RANK() OVER (PARTITION BY Address.CountyRegion order BY sum(SubTotal) desc) as rn
from Address
join CustomerAddress on Address.AddressID = CustomerAddress.AddressID
join SalesOrderHeader on CustomerAddress.CustomerID= SalesOrderHeader.CustomerID
group by CustomerAddress.CustomerID, Address.CountyRegion
)a
where rn = 1

result:
CountyRegion	CustomerID	reTotal
United Kingdom	448	108561.83
United States	24	83858.43

